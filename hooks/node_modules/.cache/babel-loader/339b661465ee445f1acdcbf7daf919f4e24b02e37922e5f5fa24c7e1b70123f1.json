{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useCounter = function () {\n  _s();\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n  const [count, setCount] = useState(initialValue);\n  function inc() {\n    setCount(count + 1);\n  }\n  function dec() {\n    setCount(count - 1);\n  }\n  return [count, inc, dec];\n};\n_s(useCounter, \"anQBWt8gm5Alpw27Xf2pPZffWFg=\");","map":{"version":3,"names":["useState","useCounter","_s","initialValue","arguments","length","undefined","count","setCount","inc","dec"],"sources":["C:/Users/gustavo.medelo/Documents/GitHub/hooks/src/hooks/UseCounter.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useCounter = (initialValue = 100) => {\r\n    const [count, setCount] = useState(initialValue)\r\n\r\n    function inc() {\r\n        setCount(count + 1)\r\n    }\r\n\r\n    function dec() {\r\n        setCount(count - 1)\r\n    }\r\n\r\n    return [count, inc, dec]\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAAwB;EAAAC,EAAA;EAAA,IAAvBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EACzC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACG,YAAY,CAAC;EAEhD,SAASM,GAAGA,CAAA,EAAG;IACXD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EAEA,SAASG,GAAGA,CAAA,EAAG;IACXF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EAEA,OAAO,CAACA,KAAK,EAAEE,GAAG,EAAEC,GAAG,CAAC;AAC5B,CAAC;AAAAR,EAAA,CAZYD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}