{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport const useFetch = function (url) {\n  _s();\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n  const [response, setResponse] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(function () {\n    fetch(url, {\n      method\n    }).then(resp => resp.json()).then(json => setResponse({\n      data: json,\n      loading: false\n    }));\n  }, [url, method]);\n  return response;\n};\n_s(useFetch, \"F/RTFdYosnDdHIWHwcx2zrMPFQE=\");","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","method","arguments","length","undefined","response","setResponse","data","loading","fetch","then","resp","json"],"sources":["C:/Users/gustavo.medelo/Documents/GitHub/hooks/src/hooks/UseFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nexport const useFetch = (url, method = 'GET') => {\r\n    const [response, setResponse] = useState({\r\n        data: null,\r\n        loading: true\r\n    })\r\n\r\n    useEffect(function() {\r\n        fetch(url, { method })\r\n            .then(resp => resp.json())\r\n            .then(json => setResponse({\r\n                data: json,\r\n                loading: false\r\n            }))\r\n    }, [url, method])\r\n\r\n    return response\r\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CAACC,GAAG,EAAqB;EAAAC,EAAA;EAAA,IAAnBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACxC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACrCU,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE;EACb,CAAC,CAAC;EAEFZ,SAAS,CAAC,YAAW;IACjBa,KAAK,CAACV,GAAG,EAAE;MAAEE;IAAO,CAAC,CAAC,CACjBS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACE,IAAI,IAAIN,WAAW,CAAC;MACtBC,IAAI,EAAEK,IAAI;MACVJ,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;EACX,CAAC,EAAE,CAACT,GAAG,EAAEE,MAAM,CAAC,CAAC;EAEjB,OAAOI,QAAQ;AACnB,CAAC;AAAAL,EAAA,CAhBYF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}