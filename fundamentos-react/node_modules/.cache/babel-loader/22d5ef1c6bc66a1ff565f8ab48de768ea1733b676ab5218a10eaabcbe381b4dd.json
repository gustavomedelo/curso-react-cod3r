{"ast":null,"code":"export function geraSequenciaMega(min, max, tamanhoArray) {\n  const tamanhoArrayInt = parseInt(tamanhoArray);\n  console.log({\n    tamanhoArrayInt\n  });\n  const sequenciaGerada = geraSequencia(min, max, tamanhoArrayInt);\n  return sequenciaGerada;\n}\nfunction geraSequencia(min, max, tamanhoArray) {\n  const array = getArray(min, max, tamanhoArray);\n  console.log(array);\n  const arrayOrdenado = ordena(array);\n  console.log(arrayOrdenado);\n  const arrayOrdenadoString = aplicaMascara(arrayOrdenado);\n  console.log(arrayOrdenadoString);\n  return arrayOrdenadoString;\n}\nfunction aplicaMascara(array) {\n  var texto = '';\n  for (let i = 0; i < array.length; i++) {\n    if (i === 0) {\n      texto += '[' + array[i] + ',';\n    } else if (i === array.length - 1) {\n      texto += array[i] + ']';\n    } else {\n      texto += array[i] + ',';\n    }\n  }\n  return texto;\n}\nfunction ordena(array) {\n  return array.sort(function (a, b) {\n    return a - b;\n  });\n}\nfunction getArray(min, max, qtde) {\n  var array = new Set();\n  while (array.size < qtde) {\n    array.add(getNumeroRandom(min, max));\n  }\n  return Array.from(array);\n}\nfunction getNumeroRandom(min, max) {\n  return parseInt(Math.random() * (max - min) + min);\n}\nfunction gerarNumeros(min, max, tamanhoArray) {\n  const sequencia = Array(tamanhoArray).fill(0).reduce(nums => {\n    const novoNumero = gerarNumeroNaoContido(min, max, tamanhoArray);\n    return [...nums, novoNumero];\n  });\n  return sequencia;\n}\nfunction gerarNumeroNaoContido(min, max, array) {\n  const aleatorio = parseInt(Math.random() * (max + 1 - min)) + min;\n  return array.includes(aleatorio) ? gerarNumeroNaoContido(min, max, array) : aleatorio;\n}","map":{"version":3,"names":["geraSequenciaMega","min","max","tamanhoArray","tamanhoArrayInt","parseInt","console","log","sequenciaGerada","geraSequencia","array","getArray","arrayOrdenado","ordena","arrayOrdenadoString","aplicaMascara","texto","i","length","sort","a","b","qtde","Set","size","add","getNumeroRandom","Array","from","Math","random","gerarNumeros","sequencia","fill","reduce","nums","novoNumero","gerarNumeroNaoContido","aleatorio","includes"],"sources":["C:/Users/gustavo.medelo/Documents/GitHub/fundamentos-react/src/components/mega/gerarNumeroNaoContido.js"],"sourcesContent":["export function geraSequenciaMega(min, max, tamanhoArray) {\r\n    const tamanhoArrayInt = parseInt(tamanhoArray)\r\n    console.log({tamanhoArrayInt})\r\n\r\n    const sequenciaGerada = geraSequencia(min, max, tamanhoArrayInt)    \r\n    return sequenciaGerada    \r\n}\r\n\r\nfunction geraSequencia(min, max, tamanhoArray) {\r\n    const array = getArray(min, max, tamanhoArray)\r\n    console.log(array)\r\n    \r\n    const arrayOrdenado = ordena(array)\r\n    console.log(arrayOrdenado)\r\n\r\n    const arrayOrdenadoString = aplicaMascara(arrayOrdenado)\r\n    console.log(arrayOrdenadoString)\r\n\r\n    return arrayOrdenadoString\r\n}\r\n\r\nfunction aplicaMascara(array) {\r\n    var texto = '';\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (i === 0) {\r\n            texto += ('[' + array[i] + ',')\r\n        } else if (i === array.length - 1) {\r\n            texto += (array[i] + ']')\r\n        } else {\r\n            texto += (array[i] + ',')\r\n        }\r\n    }\r\n    return texto\r\n}\r\n\r\nfunction ordena(array) {\r\n    return array.sort(function (a, b) { return a - b; });\r\n}\r\n\r\nfunction getArray(min, max, qtde) {\r\n    var array = new Set();\r\n    while(array.size < qtde) {\r\n        array.add(getNumeroRandom(min, max))\r\n    }\r\n    return Array.from(array);\r\n}\r\n\r\nfunction getNumeroRandom(min, max) {\r\n    return parseInt(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction gerarNumeros(min, max, tamanhoArray) {\r\n    const sequencia = Array(tamanhoArray)\r\n        .fill(0)\r\n        .reduce((nums) => {\r\n            const novoNumero = gerarNumeroNaoContido(min, max, tamanhoArray)\r\n            return [...nums, novoNumero]\r\n    })\r\n    return sequencia\r\n}\r\n\r\nfunction gerarNumeroNaoContido(min, max, array) {\r\n    const aleatorio = parseInt(Math.random() * (max + 1 - min)) + min\r\n    return array.includes(aleatorio) ? gerarNumeroNaoContido(min, max, array) : aleatorio\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}