{"ast":null,"code":"export function gerarNumeros(min, max, tamanhoArray) {\n  const sequencia = Array(tamanhoArray).fill(0).reduce(nums => {\n    const novoNumero = gerarNumeroNaoContido(min, max, nums);\n    return [...nums, novoNumero];\n  }, []).sort((a, b) => a - b);\n  console.log(sequencia);\n  return sequencia;\n}\nfunction gerarNumeroNaoContido(min, max, array) {\n  const aleatorio = parseInt(Math.random() * (max + 1 - min)) + min;\n  return array.includes(aleatorio) ? gerarNumeroNaoContido(min, max, array) : aleatorio;\n}\nfunction aplicaMascara(array) {\n  var texto = '';\n  for (let i = 0; i < array.length; i++) {\n    if (i === 0) {\n      texto += '[' + array[i] + ',';\n    } else if (i === array.length - 1) {\n      texto += array[i] + ']';\n    } else {\n      texto += array[i] + ',';\n    }\n  }\n  return texto;\n}","map":{"version":3,"names":["gerarNumeros","min","max","tamanhoArray","sequencia","Array","fill","reduce","nums","novoNumero","gerarNumeroNaoContido","sort","a","b","console","log","array","aleatorio","parseInt","Math","random","includes","aplicaMascara","texto","i","length"],"sources":["C:/Users/gustavo.medelo/Documents/GitHub/fundamentos-react/src/components/mega/gerarNumeroNaoContido.js"],"sourcesContent":["export function gerarNumeros(min, max, tamanhoArray) {\r\n    const sequencia = Array(tamanhoArray)\r\n        .fill(0)\r\n        .reduce((nums) => {\r\n            const novoNumero = gerarNumeroNaoContido(min, max, nums)\r\n            return [...nums, novoNumero]\r\n        }, [])\r\n        .sort((a, b) => a - b)\r\n    console.log(sequencia)\r\n    return sequencia\r\n}\r\n\r\nfunction gerarNumeroNaoContido(min, max, array) {\r\n    const aleatorio = parseInt(Math.random() * (max + 1 - min)) + min\r\n    return array.includes(aleatorio) ? gerarNumeroNaoContido(min, max, array) : aleatorio\r\n}\r\n\r\nfunction aplicaMascara(array) {\r\n    var texto = '';\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (i === 0) {\r\n            texto += ('[' + array[i] + ',')\r\n        } else if (i === array.length - 1) {\r\n            texto += (array[i] + ']')\r\n        } else {\r\n            texto += (array[i] + ',')\r\n        }\r\n    }\r\n    return texto\r\n}"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAEC,YAAY,EAAE;EACjD,MAAMC,SAAS,GAAGC,KAAK,CAACF,YAAY,CAAC,CAChCG,IAAI,CAAC,CAAC,CAAC,CACPC,MAAM,CAAEC,IAAI,IAAK;IACd,MAAMC,UAAU,GAAGC,qBAAqB,CAACT,GAAG,EAAEC,GAAG,EAAEM,IAAI,CAAC;IACxD,OAAO,CAAC,GAAGA,IAAI,EAAEC,UAAU,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,CACLE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;EAC1BC,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;EACtB,OAAOA,SAAS;AACpB;AAEA,SAASM,qBAAqBA,CAACT,GAAG,EAAEC,GAAG,EAAEc,KAAK,EAAE;EAC5C,MAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE,IAAIlB,GAAG,GAAG,CAAC,GAAGD,GAAG,CAAC,CAAC,GAAGA,GAAG;EACjE,OAAOe,KAAK,CAACK,QAAQ,CAACJ,SAAS,CAAC,GAAGP,qBAAqB,CAACT,GAAG,EAAEC,GAAG,EAAEc,KAAK,CAAC,GAAGC,SAAS;AACzF;AAEA,SAASK,aAAaA,CAACN,KAAK,EAAE;EAC1B,IAAIO,KAAK,GAAG,EAAE;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,IAAIA,CAAC,KAAK,CAAC,EAAE;MACTD,KAAK,IAAK,GAAG,GAAGP,KAAK,CAACQ,CAAC,CAAC,GAAG,GAAI;IACnC,CAAC,MAAM,IAAIA,CAAC,KAAKR,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;MAC/BF,KAAK,IAAKP,KAAK,CAACQ,CAAC,CAAC,GAAG,GAAI;IAC7B,CAAC,MAAM;MACHD,KAAK,IAAKP,KAAK,CAACQ,CAAC,CAAC,GAAG,GAAI;IAC7B;EACJ;EACA,OAAOD,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}