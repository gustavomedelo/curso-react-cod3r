{"ast":null,"code":"export function geraSequenciaMega(min, max, tamanhoArray) {\n  const sequenciaGerada = aplicaMascara(ordena(getArray(min, max, tamanhoArray)));\n  console.log({\n    Tamanho: {\n      tamanhoArray\n    }\n  });\n  return sequenciaGerada;\n}\nfunction aplicaMascara(array) {\n  console.log(array);\n  var texto = '';\n  for (let i = 0; i < array.length; i++) {\n    if (i === 0) {\n      texto += '[' + array[i] + ',';\n    } else if (i === array.length - 1) {\n      texto += array[i] + ']';\n    } else {\n      texto += array[i] + ',';\n    }\n  }\n  return texto;\n}\nfunction ordena(array) {\n  return array.sort(function (a, b) {\n    return a - b;\n  });\n}\nfunction getArray(min, max, qtde) {\n  var array = new Set();\n  for (let i = 0; i < qtde; i++) {\n    array.add(getNumeroRandom(min, max));\n  }\n  return Array.from(array);\n}\nfunction getNumeroRandom(min, max) {\n  return parseInt(Math.random() * (max - min) + min);\n}","map":{"version":3,"names":["geraSequenciaMega","min","max","tamanhoArray","sequenciaGerada","aplicaMascara","ordena","getArray","console","log","Tamanho","array","texto","i","length","sort","a","b","qtde","Set","add","getNumeroRandom","Array","from","parseInt","Math","random"],"sources":["C:/Users/gustavo.medelo/Documents/GitHub/fundamentos-react/src/text.js"],"sourcesContent":["export function geraSequenciaMega(min, max, tamanhoArray) {\r\n    const sequenciaGerada = aplicaMascara(ordena(getArray(min, max, tamanhoArray)))\r\n\r\n    console.log({\r\n        Tamanho: {tamanhoArray}\r\n    })\r\n    \r\n    return sequenciaGerada    \r\n}\r\n\r\nfunction aplicaMascara(array) {\r\n    console.log(array)\r\n\r\n    var texto = '';\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (i === 0) {\r\n            texto += ('[' + array[i] + ',')\r\n        } else if (i === array.length - 1) {\r\n            texto += (array[i] + ']')\r\n        } else {\r\n            texto += (array[i] + ',')\r\n        }\r\n    }\r\n    return texto\r\n}\r\n\r\nfunction ordena(array) {\r\n    return array.sort(function (a, b) { return a - b; });\r\n}\r\n\r\nfunction getArray(min, max, qtde) {\r\n    var array = new Set();\r\n    for (let i = 0; i < qtde; i++) {\r\n        array.add(getNumeroRandom(min, max))\r\n    }\r\n    return Array.from(array);\r\n}\r\n\r\nfunction getNumeroRandom(min, max) {\r\n    return parseInt(Math.random() * (max - min) + min);\r\n}"],"mappings":"AAAA,OAAO,SAASA,iBAAiBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,YAAY,EAAE;EACtD,MAAMC,eAAe,GAAGC,aAAa,CAACC,MAAM,CAACC,QAAQ,CAACN,GAAG,EAAEC,GAAG,EAAEC,YAAY,CAAC,CAAC,CAAC;EAE/EK,OAAO,CAACC,GAAG,CAAC;IACRC,OAAO,EAAE;MAACP;IAAY;EAC1B,CAAC,CAAC;EAEF,OAAOC,eAAe;AAC1B;AAEA,SAASC,aAAaA,CAACM,KAAK,EAAE;EAC1BH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EAElB,IAAIC,KAAK,GAAG,EAAE;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,IAAIA,CAAC,KAAK,CAAC,EAAE;MACTD,KAAK,IAAK,GAAG,GAAGD,KAAK,CAACE,CAAC,CAAC,GAAG,GAAI;IACnC,CAAC,MAAM,IAAIA,CAAC,KAAKF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MAC/BF,KAAK,IAAKD,KAAK,CAACE,CAAC,CAAC,GAAG,GAAI;IAC7B,CAAC,MAAM;MACHD,KAAK,IAAKD,KAAK,CAACE,CAAC,CAAC,GAAG,GAAI;IAC7B;EACJ;EACA,OAAOD,KAAK;AAChB;AAEA,SAASN,MAAMA,CAACK,KAAK,EAAE;EACnB,OAAOA,KAAK,CAACI,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAAE,OAAOD,CAAC,GAAGC,CAAC;EAAE,CAAC,CAAC;AACxD;AAEA,SAASV,QAAQA,CAACN,GAAG,EAAEC,GAAG,EAAEgB,IAAI,EAAE;EAC9B,IAAIP,KAAK,GAAG,IAAIQ,GAAG,EAAE;EACrB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,IAAI,EAAEL,CAAC,EAAE,EAAE;IAC3BF,KAAK,CAACS,GAAG,CAACC,eAAe,CAACpB,GAAG,EAAEC,GAAG,CAAC,CAAC;EACxC;EACA,OAAOoB,KAAK,CAACC,IAAI,CAACZ,KAAK,CAAC;AAC5B;AAEA,SAASU,eAAeA,CAACpB,GAAG,EAAEC,GAAG,EAAE;EAC/B,OAAOsB,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE,IAAIxB,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG,CAAC;AACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}